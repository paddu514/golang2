package funding

import (
    "sync"
    "testing"
)

const WORKERS = 10

func BenchmarkWithdrawals(b *testing.B) {
   
    if b.N < WORKERS {
        return
    }

  
    fund := NewFund(b.N)

   
    dollarsPerFounder := b.N / WORKERS

   
    var wg sync.WaitGroup

    for i := 0; i < WORKERS; i++ {
     
        wg.Add(1)
        
      
        go func() {
           
            defer wg.Done()

            for i := 0; i < dollarsPerFounder; i++ {
                fund.Withdraw(1)
            }
            
        }() 
    }

   
    wg.Wait()

    if fund.Balance() != 0 {
        b.Error("Balance wasn't zero:", fund.Balance())
    }
}
